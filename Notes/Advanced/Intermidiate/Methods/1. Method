Topic: Method, Types of method 

Method: A method is a block of code or collection of statements or a set of code grouped 
together to perform a certain task or operation. It is used to achieve the reusability of code. 
We write a method once and use it many times. We do not require to write code again and again. 
It also provides the easy modification and readability of code, just by adding or removing a 
chunk of code. The method is executed only when we call or invoke it.

Static Method

A method that has static keyword is known as static method. In other words, a method that 
belongs to a class rather than an instance of a class is known as a static method. We can also 
create a static method by using the keyword static before the method name.
The main advantage of a static method is that we can call it without creating an object. 
It can access static data members and also change the value of it. It is used to create an 
instance method. It is invoked by using the class name. The best example of a static method is 
the main() method.

Example of static method
Display.java

public class Display{  
    public static void main(String[] args){  
        show();  
    }  
    static void show(){  
        System.out.println("It is an example of static method.");  
    }  
}  

Output:
It is an example of a static method.

Instance Method
The method of the class is known as an instance method. It is a non-static method defined in 
the class. Before calling or invoking the instance method, it is necessary to create an object 
of its class. Let's see an example of an instance method.

InstanceMethodExample.java

public class InstanceMethodExample{  
    public static void main(String [] args) {  
    //Creating an object of the class  
    InstanceMethodExample obj = new InstanceMethodExample();  
    //invoking instance method   
    System.out.println("The sum is: "+obj.add(12, 13));  
    }  
    int s;  
    //user-defined method because we have not used static keyword  
    public int add(int a, int b)  
    {  
    s = a+b;  
    //returning the sum  
    return s;  
    }  
}  
Output:

The sum is: 25














